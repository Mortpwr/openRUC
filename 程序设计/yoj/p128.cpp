#include<stdio.h> #include<algorithm> struct volun{ int k = 0; int s = 0; }; volun num[5100]; void insertion_sort(volun a[], int n){ for(int i = 1; i < n; ++i){ volun key = a[i]; int j = i - 1; while(j >= 0 && key.s > a[j].s){ a[j + 1] = a[j]; j--; } a[j + 1] = key; } } int main(){ int n, m, fs = 0, count = 0; scanf("%d %d",&n, &m); int pre = m * 15/10; for(int i = 0; i < n; ++i) scanf("%d %d", &num[i].k, &num[i].s); std::sort(num, numn, [](volun a, volun b){return a.k < b.k;}); insertion_sort(num, n); for(int i = 0; i < pre; ++i) fs = num[i].s; while(num[count].s >= fs) count++; printf("%d %d\n", fs, count); for(int i = 0; i < count; ++i) printf("%d %d\n", num[i].k, num[i].s); return 0; }